<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="coding-standard">
    <description> 
        The coding standard.
        Author Gula Andriy
        Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/#phpcs
    </description>

    <exclude-pattern>*/build/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>./var/*</exclude-pattern>
    <exclude-pattern>./public/*</exclude-pattern>
    <exclude-pattern>./config/*</exclude-pattern>
    <exclude-pattern>./bin/*</exclude-pattern>
    <exclude-pattern>./src/Kernel.php</exclude-pattern>
    <exclude-pattern>./src/Migrations/*</exclude-pattern>
    <exclude-pattern>*min.js</exclude-pattern>
    <exclude-pattern>*min.css</exclude-pattern>
    <exclude-pattern>./tests/*</exclude-pattern>

    <arg name="extensions" value="php"/>
    <arg value="spn"/>
    <arg name="colors"/>
    <arg name="cache"/>
    <arg name="parallel" value="30"/>
    <arg name="report" value="code"/>

    <rule ref="PSR2"/>

    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace"/>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis"/>

    <rule ref="Generic.Commenting">
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
        <exclude name="Generic.Commenting.DocComment.NonParamGroup"/>
        <exclude name="Generic.Commenting.DocComment.ParamNotFirst"/>
    </rule>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Debug.ClosureLinter"/>
    <rule ref="Generic.Debug.JSHint"/>
    <rule ref="Generic.Debug.CSSLint"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="error" value="true"/>
            <property name="forbiddenFunctions" type="array">
                <element key="print_r" value="null"/>
                <element key="my_print_r" value="null"/>
                <element key="var_dump" value="null"/>
                <element key="var_dumps" value="null"/>
                <element key="var_dumps_exit" value="null"/>
                <element key="dump" value="null"/>
                <element key="dd" value="null"/>
                <element key="ajax_var_dumps" value="null"/>
                <element key="ajax_dd" value="null"/>
                <element key="ajax_var_dumps_exit" value="null"/>
                <element key="key_exists" value="array_key_exists"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <rule ref="MySource.Channels.DisallowSelfActions"/>
    <rule ref="MySource.Channels.IncludeOwnSystem"/>
    <rule ref="MySource.Channels.UnusedSystem"/>
    <rule ref="MySource.PHP.AjaxNullComparison"/>
    <rule ref="MySource.PHP.EvalObjectFactory"/>
    <rule ref="MySource.PHP.ReturnFunctionValue"/>
    <rule ref="MySource.PHP.AjaxNullComparison"/>
    <rule ref="PEAR.Classes.ClassDeclaration">
        <properties>
            <property name="indent" value="0"/>
        </properties>
    </rule>
    <rule ref="PEAR.Commenting.FunctionComment">
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingReturn"/>
    </rule>

    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="PEAR.Files.IncludingFile"/>
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="true"/>
        </properties>
    </rule>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="Squiz.Arrays"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.PHP.EmbeddedPhp"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>1</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
        <severity>5</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
        <severity>5</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>5</severity>
    </rule>
    <rule ref="Zend.Files.ClosingTag"/>
    <rule ref="Zend.Debug.CodeAnalyzer"/>

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
</ruleset>